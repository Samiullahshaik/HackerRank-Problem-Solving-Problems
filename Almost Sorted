import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'almostSorted' function below.
     *
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static void almostSorted(List<Integer> arr) {
    // Write your code here
                List<Integer> sortedList = arr.stream().sorted().collect(Collectors.toList());

        if (sortedList.equals(arr)) {
            System.out.println("yes");
            return;
        }

        int diffs = 0;
        int leftIndex = -1;
        int rightIndex = -1;

        for (int i = 0; i < arr.size(); i++) {
            if (!Objects.equals(sortedList.get(i), arr.get(i))) {
                diffs++;
                if (leftIndex == -1) {
                    leftIndex = i;
                } else {
                    rightIndex = i;
                }
            }
        }

        if (diffs == 2) {
            System.out.println("yes");
            System.out.println(String.format("swap %s %s", leftIndex + 1, rightIndex + 1));
            return;
        }

        boolean isSortedDesc = true;
        for (int i = leftIndex; i < rightIndex && isSortedDesc; i++) {
            isSortedDesc = arr.get(i) >= arr.get(i+1);
        }

        if (isSortedDesc) {
            System.out.println("yes");
            System.out.println(String.format("reverse %s %s", leftIndex + 1, rightIndex + 1));
            return;
        }

        System.out.println("no");
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        Result.almostSorted(arr);

        bufferedReader.close();
    }
}
