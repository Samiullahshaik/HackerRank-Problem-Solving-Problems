import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'timeInWords' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts following parameters:
     *  1. INTEGER h
     *  2. INTEGER m
     */

    public static String timeInWords(int h, int m) {
    // Write your code here
                String result="";
    String []Ones={"zero","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve"};
    String[] tens={"zero","ten","twenty","thirty","fourty","fifty","sixty"};
    String [] elevens={"zero","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen"};
    if(m==0){
        result=Ones[h]+" o' clock";
    }else if(m<30){
        if(m==1){
            result=Ones[1]+" minute past "+Ones[h];
        }else if(m/10==0){
            result=Ones[m]+" minutes past "+Ones[h];
        }else if(m/10==1){
            if(m==15){
                result="quarter past "+Ones[h];
            }else{
            int n=m%10;
            result=elevens[n]+" minutes past "+Ones[h];
            }
        }else {
            result=tens[m/10]+" "+Ones[m%10]+" minutes past "+Ones[h];
        }
    }else if(m==30){
        result="half past "+Ones[h];
    }else if(m>30){
        m=60-m;
        if(m==1){
            result=Ones[1]+" minute to "+Ones[h+1];
        }else if(m/10==0){
            result=Ones[m]+" minutes to "+Ones[h+1];
        }else if(m/10==1){
            if(m==15){
                result="quarter to "+Ones[h+1];
            }else{
            int n=m%10;
            result=elevens[n]+" minutes to "+Ones[h+1];
            }
        }else{
             result=tens[m/10]+" "+Ones[m%10]+" minutes to "+Ones[h+1];
        }
    }
    return result;
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int h = Integer.parseInt(bufferedReader.readLine().trim());

        int m = Integer.parseInt(bufferedReader.readLine().trim());

        String result = Result.timeInWords(h, m);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
